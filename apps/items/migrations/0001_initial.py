# Generated by Django 5.2 on 2025-05-09 17:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_arrived', models.DateTimeField(default=django.utils.timezone.now)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'Stocks',
                'db_table': 'stock',
                'ordering': ['-date_of_arrived'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'category',
                'ordering': ['category_name'],
            },
        ),
        migrations.CreateModel(
            name='DeletedItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=230, null=True)),
                ('date_of_deleted', models.DateTimeField(default=django.utils.timezone.now)),
                ('data', models.JSONField()),
            ],
            options={
                'verbose_name_plural': 'Deleted Items',
                'db_table': 'deleted_items',
                'ordering': ['-date_of_deleted'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Measurements',
                'db_table': 'measurement',
            },
        ),
        migrations.CreateModel(
            name='MeasurementArrivedProductInStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
            options={
                'verbose_name_plural': 'Measurement Arrived Products In Stock',
                'db_table': 'measurement_arrived_products_in_stock',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'db_table': 'product',
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='ArrivedProduct',
            fields=[
                ('stock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.stock')),
            ],
            options={
                'verbose_name_plural': 'Arrived Products',
                'db_table': 'arrived_product',
            },
            bases=('items.stock',),
        ),
    ]
